
--1 ok
select first_name, last_name, salary, hire_date, department_id
from employees
where (hire_date between '01/Jan/2005' and '31/Dec/2005'
or hire_date between '01/Jan/2008' and '31/Dec/2008')
and first_name like 'A%a';

--2 ok
SELECT department_id, Max(SALARY)
FROM employees
WHERE department_id IS NOT NULL
GROUP BY department_id
HAVING max(SALARY)>5000
ORDER BY Max(SALARY) DESC;



--3 ok
select first_name, last_name, salary, department_id
from employees
where (salary between 3000 and 15000) and (department_id != 90 and department_id != 50) ;


--4 ok
select NVL(To_char(salary*commission_pct),'No Commission')
from employees
where department_id in (90,80,60);


--5 ok
select first_name, last_name, salary, hire_date, department_id 
from employees
where length(first_name)>4;

-- 6 ok

SELECT first_name || ' ' || last_name "Full Name" , department_id, salary "Current Salary",
CASE department_id 
WHEN 90 THEN salary+(salary*.30) 
WHEN 80 THEN salary+(salary*.20)
WHEN 60 THEN salary+(salary*.25)
ELSE salary+(salary*.10)END "Increment"
from employees;

---------------------------------------

The HR department wants to determine the first
name, last name, salary, hire date and department’s
id for all the employees hired in 2005 or 2008
whose first name starts with the letter A and ends
with letter a
SELECT first_name, last_name, salary, hire_date, department_id
FROM hr.employees WHERE to_char(hire_date, 'YYYY') in
('2005','2008') and first_name like 'A%a';


Create a report to display the department’s id and
the salary of the highest-paid employee for each
department. Exclude all employees whose
department is unknown. Also, exclude any groups
where the maximum pay is $5,000 or less. Sort the
output in descending order of salary.
SELECT department_id, max(salary) highest_salary from hr.employees
where department_id is not null GROUP BY department_id
Having max(salary) > 5000 Order by highest_salary desc;


Create a report to display the employee’s first name,
last name, salary, department’s id for all employees
working in any department different than 90 or 50 ,
and whose salary is between $3000 and $15000
SELECT first_name, last_name, salary, department_id from hr.employees
WHERE department_id not in (90, 50) and salary between
3000 and 15000;




Write a query to calculate the commission (salary *
commission_pct) for all employees in departments
90, 80 or 60 . For those employees with no
commission display the text 'No commission'
SELECT last_name, nvl(to_char(salary*commission_pct), 'No Commission')
commission, department_id from hr.employees where department_
id in (90, 80, 60);



The HR department wants to determine the first
name, last name, salary, hire date and department’s
id for all the employees whose first name contains
more than 4 characters
SELECT first_name, last_name, salary, hire_date, department_id
from hr.employees WHERE length(trim(first_name)) > 4;



Write a query to display the employee's first and
last name in a single column labeled as 'Full Name',
his department id and current salary. Also it must
shown a column labeled 'Increment' in which it
should calculate the new salary for each employees
based on the following table:


90-30%
80-20%
60-25%
any dept 10%

SELECT first_name||' '||last_name "Full Name", department_id,
salary, DECODE(department_id, 90, salary*1.3, 80, salary*1.2, 60,
salary*1.25, salary*1.1) "Increment", --CASE department_id WHEN
90 THEN salary*1.3 WHEN 80 THEN salary*1.2 WHEN 60 THEN
salary*1.25 ELSE salary*1.1 END "Increment2" from hr.employees;
Points / 1 pt
